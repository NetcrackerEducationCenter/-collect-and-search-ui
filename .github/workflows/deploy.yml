name: build

on:
  push:
    branches: 
      - ci-cd

jobs:
  build:
    runs-on: ubuntu-latest
    name: Save prodaction build in Docker to GitHub packages
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js 13.10
      uses: actions/setup-node@v1
      with:
        node-version: '13.10'
    - name: Install npm
      run: |
        npm install
      env:
        CI: true
#     - name: Publish to Github Packages Registry
#       uses: elgohr/Publish-Docker-Github-Action@master
#       with:
#         name: netcracker-education-center/collect-and-search-ui/reactimage
#         registry: docker.pkg.github.com
#         username: ${{ github.actor }}
#         password: ${{ secrets.GITHUB_TOKEN }}
#         dockerfile: Dockerfile
#         tags: latest 
    - name: Build container image
      uses: docker/build-push-action@v1
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: docker.pkg.github.com
        repository: ${{ github.repository }}/reactimage
        tag_with_ref: true
        
#     - name: Push to GitHub Packages
#       uses: docker/build-push-action@v1
#       with:
#           username: ${{github.actor}}
#           password: ${{secrets.GITHUB_TOKEN}}
#           tags: latest
#           registry: docker.pkg.github.com
#           repository: netcracker-education-center/collect-and-search-ui/reactimage
#           tag_with_ref: true
  deploy:
    runs-on: ubuntu-latest
    name: Deploy Docker from Github packages to Digital Ocean
    needs: build
    steps:
    - name: Deploy package to digitalocean        
      uses: appleboy/ssh-action@master
      env:
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          host: ${{secrets.SSH_HOST}}
          key: ${{secrets.SSH_KEY}}
          username: ${{secrets.SSH_USERNAME}}
          passphrase: ${{secrets.PASSPHRASE}}
    #           envs: GITHUB_USERNAME, GITHUB_TOKEN
          script: |
                  cd netcracker/education-center/collect-and-search/collect-and-search-ui
                  docker login docker.pkg.github.com -u $GITHUB_USERNAME -p $GITHUB_TOKEN
                  docker login https://docker.pkg.github.com -u ${{github.actor}} -p ${{secrets.GITHUB_TOKEN}} --password-stdin
                  docker container stop $(docker ps --filter "name=reactimage")

                  docker pull docker.pkg.github.com/netcracker-education-center/collect-and-search-ui/reactimage:latest
                  docker run -dit -p 50:50 docker.pkg.github.com/netcracker-education-center/collect-and-search-ui/reactimage:latest

  #           docker image rm netcracker/reactimage
  #             
  #             docker login https://docker.pkg.github.com -u ${{github.repository_owner}} -p ${{secrets.GITHUB_TOKEN}} --password-stdin
  #             docker container stop $(docker ps -aqf "name=reactimage")
  #             docker container rm $(docker ps -aqf "name=reactimage")
  #             docker image rm netcracker/reactimage
  #             docker image rm docker.pkg.github.com/netcracker-education-center/collect-and-search-ui/reactimage
  #             docker pull docker.pkg.github.com/netcracker-education-center/collect-and-search-ui/reactimage:latest
  #             docker tag docker.pkg.github.com/netcracker-education-center/collect-and-search-ui/reactimage:latest netcracker/reactimage:latest
  #             # -d means that container starts in detached mode or in the background
  #             docker run -d --name reactimage -p 3000:3000 -p 7070:7070 netcracker/reactimage:latest -v netcracker/education-center/collect-and-search/collect-and-search-ui/log:/log

